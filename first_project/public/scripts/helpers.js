import { Book } from './book.js';
export function serialize(value) {
    if (value == null) {
        return value + '';
    }
    // unknown не даст использовать
    // name, genre и price без проверки
    if (value instanceof Book) {
        return `${value.name}, ${value.genre}, ${value.price}`;
    }
    // остальные типы будем просто
    // приводить к строке
    return value.toString();
}
export function showRating(entity) {
    if (entity.rating == null) {
        return 'not rated yet';
    }
    const roundedRating = Math.round(entity.rating);
    let rating = '';
    for (let i = 0; i < roundedRating; i++) {
        rating += '⭐';
    }
    return rating + ` (${entity.rating.toFixed(2)})`;
}
export function showCart(products) {
    let totalPrice = 0;
    products.forEach((product) => {
        totalPrice += product.price;
        console.log(`${product.getProductDescription()} x ${product.price} rub.`);
    });
    console.log(`\nTotal items: ${products.length}, total cost: ${totalPrice}`);
}
import { Genre } from './types.js';
export function getGenreName(genre) {
    const genreMapping = {
        [Genre.Adventure]: 'adventure',
        [Genre.Fantasy]: 'fantasy',
        [Genre.Horror]: 'horror'
    };
    return genreMapping[genre];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUE7QUFDaEMsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFjO0lBQ3RDLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtRQUNqQixPQUFPLEtBQUssR0FBRyxFQUFFLENBQUE7S0FDbEI7SUFDRCwrQkFBK0I7SUFDL0IsbUNBQW1DO0lBQ25DLElBQUksS0FBSyxZQUFZLElBQUksRUFBRTtRQUN6QixPQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksS0FBSyxLQUFLLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQTtLQUN2RDtJQUNELDhCQUE4QjtJQUM5QixxQkFBcUI7SUFDckIsT0FBTyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUE7QUFDekIsQ0FBQztBQUlELE1BQU0sVUFBVSxVQUFVLENBQUMsTUFBa0I7SUFDM0MsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLElBQUksRUFBRTtRQUN6QixPQUFPLGVBQWUsQ0FBQTtLQUN2QjtJQUNELE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQy9DLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQTtJQUNmLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxhQUFhLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDdEMsTUFBTSxJQUFJLEdBQUcsQ0FBQTtLQUNkO0lBQ0QsT0FBTyxNQUFNLEdBQUcsS0FBSyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFBO0FBQ2xELENBQUM7QUFHRCxNQUFNLFVBQVUsUUFBUSxDQUFDLFFBQW1CO0lBQzFDLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQTtJQUNsQixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDM0IsVUFBVSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUE7UUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxxQkFBcUIsRUFBRSxNQUFNLE9BQU8sQ0FBQyxLQUFLLE9BQU8sQ0FBQyxDQUFBO0lBQzNFLENBQUMsQ0FBQyxDQUFBO0lBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsUUFBUSxDQUFDLE1BQU0saUJBQWlCLFVBQVUsRUFBRSxDQUFDLENBQUE7QUFDN0UsQ0FBQztBQUVELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDbEMsTUFBTSxVQUFVLFlBQVksQ0FBQyxLQUFZO0lBQ3ZDLE1BQU0sWUFBWSxHQUFHO1FBQ25CLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxFQUFFLFdBQVc7UUFDOUIsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsU0FBUztRQUMxQixDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFRO0tBQ3pCLENBQUE7SUFDRCxPQUFPLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQTtBQUM1QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9vayB9IGZyb20gJy4vYm9vay5qcydcbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemUodmFsdWU6IHVua25vd24pIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWUgKyAnJ1xuICB9XG4gIC8vIHVua25vd24g0L3QtSDQtNCw0YHRgiDQuNGB0L/QvtC70YzQt9C+0LLQsNGC0YxcbiAgLy8gbmFtZSwgZ2VucmUg0LggcHJpY2Ug0LHQtdC3INC/0YDQvtCy0LXRgNC60LhcbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQm9vaykge1xuICAgIHJldHVybiBgJHt2YWx1ZS5uYW1lfSwgJHt2YWx1ZS5nZW5yZX0sICR7dmFsdWUucHJpY2V9YFxuICB9XG4gIC8vINC+0YHRgtCw0LvRjNC90YvQtSDRgtC40L/RiyDQsdGD0LTQtdC8INC/0YDQvtGB0YLQvlxuICAvLyDQv9GA0LjQstC+0LTQuNGC0Ywg0Log0YHRgtGA0L7QutC1XG4gIHJldHVybiB2YWx1ZS50b1N0cmluZygpXG59XG5cblxuaW1wb3J0IHsgUmF0aW5nYWJsZSB9IGZyb20gJy4vcmF0aW5nYWJsZS5qcydcbmV4cG9ydCBmdW5jdGlvbiBzaG93UmF0aW5nKGVudGl0eTogUmF0aW5nYWJsZSkge1xuICBpZiAoZW50aXR5LnJhdGluZyA9PSBudWxsKSB7XG4gICAgcmV0dXJuICdub3QgcmF0ZWQgeWV0J1xuICB9XG4gIGNvbnN0IHJvdW5kZWRSYXRpbmcgPSBNYXRoLnJvdW5kKGVudGl0eS5yYXRpbmcpXG4gIGxldCByYXRpbmcgPSAnJ1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHJvdW5kZWRSYXRpbmc7IGkrKykge1xuICAgIHJhdGluZyArPSAn4q2QJ1xuICB9XG4gIHJldHVybiByYXRpbmcgKyBgICgke2VudGl0eS5yYXRpbmcudG9GaXhlZCgyKX0pYFxufVxuXG5pbXBvcnQgeyBQcm9kdWN0IH0gZnJvbSAnLi9wcm9kdWN0LmpzJ1xuZXhwb3J0IGZ1bmN0aW9uIHNob3dDYXJ0KHByb2R1Y3RzOiBQcm9kdWN0W10pIHtcbiAgbGV0IHRvdGFsUHJpY2UgPSAwXG4gIHByb2R1Y3RzLmZvckVhY2goKHByb2R1Y3QpID0+IHtcbiAgICB0b3RhbFByaWNlICs9IHByb2R1Y3QucHJpY2VcbiAgICBjb25zb2xlLmxvZyhgJHtwcm9kdWN0LmdldFByb2R1Y3REZXNjcmlwdGlvbigpfSB4ICR7cHJvZHVjdC5wcmljZX0gcnViLmApXG4gIH0pXG4gIGNvbnNvbGUubG9nKGBcXG5Ub3RhbCBpdGVtczogJHtwcm9kdWN0cy5sZW5ndGh9LCB0b3RhbCBjb3N0OiAke3RvdGFsUHJpY2V9YClcbn1cblxuaW1wb3J0IHsgR2VucmUgfSBmcm9tICcuL3R5cGVzLmpzJ1xuZXhwb3J0IGZ1bmN0aW9uIGdldEdlbnJlTmFtZShnZW5yZTogR2VucmUpIHtcbiAgY29uc3QgZ2VucmVNYXBwaW5nID0ge1xuICAgIFtHZW5yZS5BZHZlbnR1cmVdOiAnYWR2ZW50dXJlJyxcbiAgICBbR2VucmUuRmFudGFzeV06ICdmYW50YXN5JyxcbiAgICBbR2VucmUuSG9ycm9yXTogJ2hvcnJvcidcbiAgfVxuICByZXR1cm4gZ2VucmVNYXBwaW5nW2dlbnJlXVxufVxuIl19